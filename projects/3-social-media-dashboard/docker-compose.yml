version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15
    container_name: social-dashboard-postgres
    restart: always
    environment:
      POSTGRES_DB: social_dashboard
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - social-dashboard-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: social-dashboard-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - social-dashboard-network

  # API Gateway
  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile
    container_name: social-dashboard-gateway
    restart: always
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - REDIS_HOST=redis
      - POSTGRES_HOST=postgres
    depends_on:
      - postgres
      - redis
    networks:
      - social-dashboard-network

  # Analytics Service
  analytics-service:
    build:
      context: ./backend/analytics-service
      dockerfile: Dockerfile
    container_name: social-dashboard-analytics
    restart: always
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - POSTGRES_HOST=postgres
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis
    networks:
      - social-dashboard-network

  # User Service
  user-service:
    build:
      context: ./backend/user-service
      dockerfile: Dockerfile
    container_name: social-dashboard-users
    restart: always
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - POSTGRES_HOST=postgres
    depends_on:
      - postgres
    networks:
      - social-dashboard-network

  # Data Collector Service
  data-collector-service:
    build:
      context: ./backend/data-collector-service
      dockerfile: Dockerfile
    container_name: social-dashboard-collector
    restart: always
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - POSTGRES_HOST=postgres
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis
    networks:
      - social-dashboard-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: social-dashboard-frontend
    restart: always
    ports:
      - "3000:80"
    depends_on:
      - api-gateway
    networks:
      - social-dashboard-network

volumes:
  postgres_data:
  redis_data:

networks:
  social-dashboard-network:
    driver: bridge